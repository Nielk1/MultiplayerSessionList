@{
    ViewData["Title"] = "Home Page";
}

<style>
    .player_avatars {
        text-align: center;
    }

        .player_avatars a img {
            height: 100px;
        }
</style>

<div class="container">
    <div class="dropdown float-left">
        <a class="btn btn-secondary dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            Game
        </a>

        <div id="dropdownMenuContainer" class="dropdown-menu" aria-labelledby="dropdownMenuLink"></div>
    </div>
    <button id="btnRefresh" disabled="disabled" type="button" class="btn btn-outline-primary float-right">Refresh</button>

    <div class="text-center">
        <h1 class="display-5">Game List Test</h1>
    </div>
</div>

<div class="container-fluid">
    <table id="tblGames" class="table table-dark">
        <thead class="thead-dark">
            <tr>
                <th scope="col">Name</th>
                <th scope="col">Players/Spectators</th>
                <th scope="col">Locked</th>
                <th scope="col">Passworded</th>
                <th scope="col">State</th>
                <th scope="col">...</th>
            </tr>
        </thead>
        <tbody></tbody>
        <thead class="thead-dark">
            <tr>
                <th scope="col">Name</th>
                <th scope="col">Players/Spectators</th>
                <th scope="col">Locked</th>
                <th scope="col">Passworded</th>
                <th scope="col">State</th>
                <th scope="col">...</th>
            </tr>
        </thead>
    </table>
</div>

@section Scripts {
    <script>
        //$(document).ready(function () {
        $.ajax({ url: '/api/games' })
            .done(function (data) {
                $('#dropdownMenuContainer').empty();
                for (var i = 0; i < data.length; i++) {
                    var dat = data[i];
                    //if (i == 0) {
                    //    $('#dropdownMenuLink').text(dat.Name);
                    //    $('#dropdownMenuContainer').append('<a class="dropdown-item active" href="#" data-value="' + dat.Key + '">' + dat.Name + '</a>');
                    //} else {
                    var sessionRow = $('<a class="dropdown-item" href="#"/>');
                    sessionRow.text(dat.Name);
                    sessionRow.data('value', dat.Key)
                    $('#dropdownMenuContainer').append(sessionRow);
                    //}
                }
            });

        $('#dropdownMenuContainer').click('.dropdown-item', function (e) {
            e.preventDefault();
            $('#dropdownMenuContainer>.dropdown-item').removeClass('active');
            var item = $(e.target);
            item.addClass('active')
            $('#dropdownMenuLink').text(item.text());
            $('#btnRefresh').data('key', item.data('value')).removeAttr("disabled");
            $('#btnRefresh').trigger('click');
        });

        var GetGamesAjax = null;
        $('#btnRefresh').click(function (e) {
            e.preventDefault();
            var key = $('#btnRefresh').data('key');

            $('#tblGames>tbody').empty();
            if (GetGamesAjax != null) {
                GetGamesAjax.abort();
            }
            GetGamesAjax = $.ajax({ url: 'api/sessions?game=' + key }).done(function (data) {
                for (var i = 0; i < data.Sessions.length; i++) {
                    var session = $.extend({}, data.SessionDefault, data.Sessions[i]);
                    var sessionRow = $('<tr/>');
                    sessionRow.append($('<th scope="row"/>').text(session.Name));
                    {
                        var playersCount = '';
                        playersCount += session.PlayerCount + 'P';
                        if (session.SpectatorPossible) {
                            playersCount += ' ' + session.SpectatorCount + 'S';
                        }

                        var playersMax = '';
                        if (session.SpectatorPossible & session.SpectatorSeperate) {
                            playersMax += session.PlayerMax + 'P';
                            playersMax += session.SpectatorsMax + 'S';
                        } else {
                            playersMax += session.PlayerMax;
                        }

                        if (playersMax.length > 0) {
                            sessionRow.append($('<td/>').text(playersCount + ' / ' + playersMax));
                        } else {
                            sessionRow.append($('<td/>').text(playersCount));
                        }
                    }
                    sessionRow.append($('<td/>').text(session.Status.Locked));
                    sessionRow.append($('<td/>').text(session.Status.Passworded));
                    sessionRow.append($('<td/>').text(session.Status.State));
                    sessionRow.append($('<td/>').text(''));
                    $('#tblGames>tbody').append(sessionRow);

                    // level
                    {
                        $('#tblGames>tbody').append('<tr><td class="pt-0 pb-0 text-center text-monospace font-weight-bold" colspan="6">Level</td></tr>');

                        var levelRow = $('<div class="row"/>');

                        var media = $('<div class="media"/>');
                        media.append($('<img class="mr-3" src="https://discord.battlezone.report/resources/logos/nomap.png"/>').attr('alt', session.Level.MapFile));
                        var mediaBody = $('<div class="media-body"/>');

                        mediaBody.append('test');

                        media.append(mediaBody);
                        levelRow.append(media);

                        var levelPanel = $('<div class="container-fluid bg-white text-dark"/>').append(levelRow);
                        $('#tblGames>tbody').append($('<tr/>').append($('<td colspan="6" class="p-0 pl-3 pr-3" />').append(levelPanel)));
                    }

                    // players
                    {
                        $('#tblGames>tbody').append('<tr><td class="pt-0 pb-0 text-center text-monospace font-weight-bold" colspan="6">Players</td></tr>');

                        var avatars = [];

                        var playerTable = $('<table/>');
                        //playerTable.addClass('table-dark');
                        //playerTable.addClass('small');
                        playerTable.addClass('table-sm');
                        playerTable.addClass('table-light');
                        playerTable.addClass('text-dark');
                        //playerTable.addClass('border-left');
                        //playerTable.addClass('border-right');
                        //playerTable.addClass('border-dark');
                        playerTable.css('width', '100%');
                        //playerTable.css('border-width', '1em !important');
                        var playerTableHeader = $('<thead/>');
                        var playerTableBody = $('<tbody/>');
                        playerTable.append(playerTableHeader)
                        playerTable.append(playerTableBody)

                        var ColumnNames = ["Name", "ID"];
                        for (var j = 0; j < session.Players.length; j++) {
                            var playerRow = $('<tr/>');
                            playerRow.append($('<th/>').text(session.Players[j].Name));
                            {
                                var cell = $('<td/>');
                                var keys = Object.keys(session.Players[j].IDs);
                                for (var k = 0; k < keys.length; k++) {
                                    var elem = $('<span/>');
                                    if (k > 0)
                                        cell.append('<br/>');
                                    switch (keys[k]) {
                                        case "Slot":
                                            elem.append('<i class="icon icon-hash" aria-hidden="true"></i> ');
                                            elem.append(session.Players[j].IDs[keys[k]].ID);
                                            break;
                                        case "BZRNet":
                                            elem.append('<i class="fa fa-gamepad" aria-hidden="true"></i> ');
                                            elem.append(session.Players[j].IDs[keys[k]].ID);
                                            break;
                                        case "Steam":
                                            elem.append('<i class="icon icon-steam" aria-hidden="true"></i> ');
                                            elem.append('<a href="' + session.Players[j].IDs[keys[k]].ProfileUrl + '" title="' + session.Players[j].IDs[keys[k]].ID + '">' + session.Players[j].IDs[keys[k]].Nickname + '</a>');
                                            avatars.push({ src: session.Players[j].IDs[keys[k]].AvatarUrl, href: session.Players[j].IDs[keys[k]].ProfileUrl, name: session.Players[j].IDs[keys[k]].Nickname });
                                            break;
                                        case "Gog":
                                            elem.append('<i class="icon icon-gog" aria-hidden="true"></i> ');
                                            elem.append('<a href="' + session.Players[j].IDs[keys[k]].ProfileUrl + '" title="' + session.Players[j].IDs[keys[k]].ID + '">' + session.Players[j].IDs[keys[k]].UserName + '</a>');
                                            avatars.push({ src: session.Players[j].IDs[keys[k]].AvatarUrl, href: session.Players[j].IDs[keys[k]].ProfileUrl, name: session.Players[j].IDs[keys[k]].UserName });
                                            break;
                                        default:
                                            elem.append(keys[k] + ": ");
                                            elem.append(session.Players[j].IDs[keys[k]].ID);
                                            break;
                                    }
                                    cell.append(elem);
                                }
                                playerRow.append(cell);
                            }
                            playerTableBody.append(playerRow);
                        }
                        var playerHeaderRow = $('<tr/>');
                        playerTableHeader.append(playerHeaderRow);
                        for (var j = 0; j < ColumnNames.length; j++) {
                            playerHeaderRow.append($('<th/>').text(ColumnNames[j]));
                        }

                        var playerAvatarBar = $('<div class="player_avatars" />');
                        for (var j = 0; j < avatars.length; j++) {
                            playerAvatarBar.append('<a href="' + avatars[j].href + '" title="' + avatars[j].name + '"><img src="' +avatars[j].src + '"/></a>');
                        }
                        $('#tblGames>tbody').append($('<tr/>').append($('<td colspan="6" class="p-0 pl-3 pr-3" />').append(playerTable)));
                        $('#tblGames>tbody').append($('<tr/>').append($('<td colspan="6" class="p-0 pl-3 pr-3" />').append(playerAvatarBar)));
                    }

                }
            });
        });
                    //});
    </script>
}